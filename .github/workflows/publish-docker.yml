name: Build and Publish

on:
  workflow_call:

jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    - name: Install Homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Run Test Task
      run: task test
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ github.token }}
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Tests
        path: testresults/*.trx
        reporter: dotnet-trx
        fail-on-empty: false
    - name: Write to Job Summary
      if: success() || failure()
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
    - name: Check Code Coverage Report
      uses: andstor/file-existence-action@v3
      id: check_coverage_report
      with:
        files: testresults/**/coverage.cobertura.xml
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      if: steps.check_coverage_report.outputs.files_exists == 'true'
      with:
        filename: testresults/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        indicators: true
        output: both
        thresholds: '40 70'
    - name: Write to Job Summary
      if: steps.check_coverage_report.outputs.files_exists == 'true'
      run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
  publish:
    name: Build and Publish Docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64
    - name: Install DevSpace
      uses: loft-sh/setup-devspace@main
    - name: Install Task
      uses: arduino/setup-task@v2
      with:
        version: 3.x
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Get Version Number
      id: get_version
      uses: deepetherlabs/actions/version@main
    - name: Build and Publish v${{ steps.get_version.outputs.version }} using DevSpace
      run: devspace build -t ${{ steps.get_version.outputs.version }}
      env:
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_TOKEN: ${{ github.token }}
    needs: [test]
